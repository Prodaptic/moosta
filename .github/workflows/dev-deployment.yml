name: Development Deployment

env:
  DOTNET_CORE_VERSION: 6.0.x

on:
  push:
    branches: [ main ]

jobs:
  infrastructure:
    name: Infrastructure
    runs-on: ubuntu-latest
    environment: dev
    steps:

      # Checkout code
    - name: Checkount
      uses: actions/checkout@main

      # Log into Azure
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.INFRASTRUCTURE_CREDENTIALS  }}

      # Deploy Bicep file
    - name: Deploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./src/infra.bicep
        parameters: ./src/dev-infra.parameters.json
        failOnStdErr: false

  build-and-deploy-web:
    runs-on: ubuntu-latest
    name: Build and Deploy Moosta Web
    environment: dev

    steps:

    #Build and Deploy Blazor Web App
    - uses: actions/checkout@v2
    - name: Build And Deploy Azure Static Web App
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }} 
        app_location: src/Moosta.Web
        app_artifact_location: wwwroot
        action: upload

  build-and-deploy-platform-function:
    runs-on: ubuntu-latest
    env:
      AZURE_FUNCTIONAPP_NAME: moosta-functions-platform-dev
      AZURE_FUNCTIONAPP_PACKAGE_PATH: Moosta.Functions.Platform/publish
      CONFIGURATION: Release
      WORKING_DIRECTORY: src/Moosta.Functions.Platform
      AZURE_APIM_RESOURCE_PATH: /
      
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
    - name: Deploy to Azure Function App
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ secrets.AZURE_FUNCTIONAPP_NAME }}
        publish-profile: ${{ secrets.moosta_functions_platform_dev_cf24 }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
    # Log into Azure
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.INFRASTRUCTURE_CREDENTIALS  }}
    - name: Import API into Azure API Management
      run: az apim api import --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" --resource-group ${{ secrets.AZURE_RG }} --service-name ${{ secrets.AZURE_APIM_SERVICENAME }} --api-id ${{ secrets.AZURE_APIM_API_ID }} --specification-url "${{ secrets.AZURE_APIM_SWAGGERURL }}" --specification-format OpenApi --subscription-required false
